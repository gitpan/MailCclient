		     Perl Mail::Cclient module, Version 0.3

		      Copyright (c) 1998, Malcolm Beattie

    This program is free software; you can redistribute it and/or modify
    it under the terms of either:

	a) the GNU General Public License as published by the Free
	Software Foundation; either version 1, or (at your option) any
	later version, or

	b) the "Artistic License" which comes with this kit.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See either
    the GNU General Public License or the Artistic License for more details.

    You should have received a copy of the Artistic License with this kit,
    in the file named "Artistic".  If not, you can get one from the Perl
    distribution. You should also have received a copy of the GNU General
    Public License, in the file named "Copying". If not, you can get one
    from the Perl distribution or else write to the Free Software
    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

DESCRIPTION

Mail::Cclient gives access to mailboxes in many different formats
(including remote IMAP folders) via the c-client API. The c-client
library is the core library used by Pine and the University of
Washington IMAP daemon (written by Mark Crispin).

INSTALLATION

Install the University of Washington imapd source distribution
(e.g. 4.1.BETA) and build at least the c-client library
(c-client/c-client.a). The home site for the UW imapd is
    ftp://ftp.cac.washington.edu:/mail/imap-4.1.BETA.tar.Z

Edit Makefile.PL and change the definition of $CCLIENT_DIR to be
the pathname of the c-client directory (i.e. the pathname will end
in imapd-foo/c-client). Then add any necessary entries to LIBS
(for example, Linux distributions such as Red Hat which have imapd
with PAM support require LIBS => ["-lpam"]).

Do
    perl Makefile.PL

This process needs to extract all object files from the c-client.a
archive into the current directory. This is for the sake of those
platforms which require an explicit list of object files for creating
shared objects rather than a mix of .o and .a files. If the extraction
succeeds, it will say so and you can carry on and do

    make

If the extraction failed for some reason, you will have to do that
part yourself and then replace that part of MakeMaker with a simple
assignment to @objects of the object files in your c-client.a.

Once the extension has been built, you can do

    make install

to complete the installation.

TESTING

The test files t/*.t aren't automated ones which produce "ok ..."
output but reading them should show how a few of the basics work.

DOCUMENTATION

Cclient.pm includes fairly complete (but rather hurriedly-written)
documentation which the build/installation process will turn into
a man page. You may also want to read the $CCLIENT_DIR/docs/Internal.doc
which documents the underlying c-client library. However, that
documentation is at odds with the actual code in a few places.

Malcolm Beattie
1 June 1998
